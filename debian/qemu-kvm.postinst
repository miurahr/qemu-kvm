#!/bin/sh
# postinst script for qemu-kvm
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        # Add the kvm group unless it's already there
        if ! getent group kvm >/dev/null; then
            addgroup --quiet --system kvm || true
        fi

	# in 0.14.2 we moved initscript (module loading)
	# from "defaults" level to just one rcS.d start
	# (there's no need to unload the module anymore).
	# Clean the old symlinks here.
	# There's no need to bother with backwards compatibility
	# since old script will work in rcS.d too.
	if dpkg --compare-versions "$2" lt "0.14.2"; then
	    update-rc.d -f qemu-kvm remove >/dev/null
	fi

    ;;

    abort-upgrade)
    ;;

    abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.
#DEBHELPER#

# if we just installed the package, udev rules aren't picked up yet,
# so udev created the device (/dev/kvm) with default permissions.
# Fix it here, but only if the perms are like default.
# (See #607391)

if [ -c /dev/kvm -a ! -L /dev/kvm ] && [ .$(stat -c %u%g /dev/kvm) = .00 ]
then
  chgrp kvm /dev/kvm
  chmod 0660 /dev/kvm
fi

exit 0
