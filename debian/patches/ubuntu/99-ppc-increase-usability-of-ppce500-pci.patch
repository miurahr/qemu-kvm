--- a/hw/ppce500_mpc8544ds.c
+++ b/hw/ppce500_mpc8544ds.c
@@ -76,6 +76,18 @@
                              0x9000, 0x0, 0x0, 0x2, mpic, 0x4, 0x1, 0x0, 0x0,
                              0x9000, 0x0, 0x0, 0x3, mpic, 0x2, 0x1, 0x0, 0x0,
                              0x9000, 0x0, 0x0, 0x4, mpic, 0x1, 0x1, 0x0, 0x0,
+
+                             /* IDSEL 0x13 */
+                             0x9800, 0x0, 0x0, 0x1, mpic, 0x4, 0x1, 0x0, 0x0,
+                             0x9800, 0x0, 0x0, 0x2, mpic, 0x1, 0x1, 0x0, 0x0,
+                             0x9800, 0x0, 0x0, 0x3, mpic, 0x2, 0x1, 0x0, 0x0,
+                             0x9800, 0x0, 0x0, 0x4, mpic, 0x3, 0x1, 0x0, 0x0,
+
+                             /* IDSEL 0x14 */
+                             0xa000, 0x0, 0x0, 0x1, mpic, 0x1, 0x1, 0x0, 0x0,
+                             0xa000, 0x0, 0x0, 0x2, mpic, 0x2, 0x1, 0x0, 0x0,
+                             0xa000, 0x0, 0x0, 0x3, mpic, 0x3, 0x1, 0x0, 0x0,
+                             0xa000, 0x0, 0x0, 0x4, mpic, 0x4, 0x1, 0x0, 0x0,
                            };
     for (i = 0; i < ARRAY_SIZE(tmp); i++) {
         pci_map[i] = cpu_to_be32(tmp[i]);
@@ -533,8 +545,15 @@
 
     if (pci_bus) {
         /* Register network interfaces. */
-        for (i = 0; i < nb_nics; i++) {
-            pci_nic_init_nofail(&nd_table[i], "virtio", NULL);
+        if (default_net) {
+            for (i = 0; i < nb_nics; i++) {
+                pci_nic_init_nofail(&nd_table[i], "virtio", NULL);
+            }
+        }
+
+        /* Register usb bus */
+        if (usb_enabled) {
+            pci_create_simple(pci_bus, -1, "piix4-usb-uhci");
         }
     }
 
--- a/hw/ppce500_pci.c
+++ b/hw/ppce500_pci.c
@@ -227,15 +227,19 @@
     .endianness = DEVICE_BIG_ENDIAN,
 };
 
+#define IRQ_BASE	0x11
+
 static int mpc85xx_pci_map_irq(PCIDevice *pci_dev, int irq_num)
 {
     int devno = pci_dev->devfn >> 3, ret = 0;
 
     switch (devno) {
-        /* Two PCI slot */
-        case 0x11:
-        case 0x12:
-            ret = (irq_num + devno - 0x10) % 4;
+        /* Faur PCI slot */
+	case IRQ_BASE:
+	case IRQ_BASE + 1:
+	case IRQ_BASE + 2:
+	case IRQ_BASE + 3:
+            ret = (irq_num + devno - (IRQ_BASE - 1)) & 0x3;
             break;
         default:
             printf("Error:%s:unknown dev number\n", __func__);
@@ -319,7 +323,7 @@
 
     b = pci_register_bus(&s->pci_state.busdev.qdev, NULL, mpc85xx_pci_set_irq,
                          mpc85xx_pci_map_irq, s->irq, address_space_mem,
-                         address_space_io, PCI_DEVFN(0x11, 0), 4);
+                         address_space_io, PCI_DEVFN(IRQ_BASE, 0), 4);
     s->pci_state.bus = b;
 
     pci_create_simple(b, 0, "e500-host-bridge");
